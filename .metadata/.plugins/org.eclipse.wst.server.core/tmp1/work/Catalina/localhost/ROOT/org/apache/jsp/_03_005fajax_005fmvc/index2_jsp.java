/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.76
 * Generated at: 2023-07-24 07:35:28 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._03_005fajax_005fmvc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index2_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("	table{\r\n");
      out.write("		width: 800px; margin-top: 50px; border-collapse: collapse;\r\n");
      out.write("	}\r\n");
      out.write("	table, th, td {\r\n");
      out.write("	    border: 1px solid red; text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("    #out{\r\n");
      out.write("    	width:800px;\r\n");
      out.write("    	margin: auto;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.0/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write(" $(document).ready(function(){\r\n");
      out.write("	 $(\"#btn1\").on(\"click\", function() {\r\n");
      out.write("		$(\"#out\").empty();\r\n");
      out.write("		$.ajax({\r\n");
      out.write("			url: \"/TestXML\",\r\n");
      out.write("			dataType: \"xml\",\r\n");
      out.write("			method : \"get\",\r\n");
      out.write("			success : function(data){\r\n");
      out.write("				// console.log(data);\r\n");
      out.write("				var table =\"<table>\";\r\n");
      out.write("				table += \"<thead><tr><th>지역</th><th>온도</th><th>상태</th><th>아이콘</th></tr></thead>\";\r\n");
      out.write("				table +=\"<tbody>\";\r\n");
      out.write("				$(data).find(\"local\").each(function() {\r\n");
      out.write("					table += \"<tr>\";\r\n");
      out.write("					table += \"<td>\" + $(this).text() +\"</td>\";\r\n");
      out.write("					table += \"<td>\" + $(this).attr(\"ta\") +\"</td>\";\r\n");
      out.write("					table += \"<td>\" + $(this).attr(\"desc\") +\"</td>\";\r\n");
      out.write("					table += \"<td><img src='http://www.kma.go.kr/images/icon/NW/NB\"+ $(this).attr(\"icon\") +\".png'></td>\";\r\n");
      out.write("					table += \"</tr>\";\r\n");
      out.write("				});\r\n");
      out.write("				table += \"</tbody></table>\";\r\n");
      out.write("				$(\"#out\").append(table);\r\n");
      out.write("			},\r\n");
      out.write("			error :function(){\r\n");
      out.write("				alert(\"읽기실패\");\r\n");
      out.write("			},\r\n");
      out.write("		});\r\n");
      out.write("	});\r\n");
      out.write("	/* \r\n");
      out.write("	 js를 활용한 천단위 콤마\r\n");
      out.write("	 정규식  (예)\r\n");
      out.write("	 const ori_val = 12345.6789;\r\n");
      out.write("	 const changed_val = ori_val.toString().replace(/\\B(?<!.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\");\r\n");
      out.write("	 내장함수사용(예)\r\n");
      out.write("	  toLocaleString('ko-KR', {maximumFractionDigits: 2}) \r\n");
      out.write("	 */\r\n");
      out.write("	 $(\"#btn2\").on(\"click\", function() {\r\n");
      out.write("			$(\"#out\").empty();\r\n");
      out.write("			$.ajax({\r\n");
      out.write("				url: \"/MyController7\",\r\n");
      out.write("				dataType: \"json\",\r\n");
      out.write("				method : \"get\",\r\n");
      out.write("				success : function(data){\r\n");
      out.write("					// console.log(data);\r\n");
      out.write("					var table =\"<table>\";\r\n");
      out.write("					table += \"<thead><tr><th>시·도별</th><th>총인구</th><th>1차 접종 누계</th><th>1차 접종 퍼센트</th><th>2차 접종 누계</th><th>2차 접종 퍼센트</th></tr></thead>\";\r\n");
      out.write("					table +=\"<tbody>\";\r\n");
      out.write("					$.each(data, function(k,v) {\r\n");
      out.write("						table += \"<tr>\";\r\n");
      out.write("						table += \"<td>\" + v[\"시·도별(1)\"] + \"</td>\";\r\n");
      out.write("						table += \"<td>\" + v[\"총인구 (명)\"].toLocaleString() + \"</td>\";\r\n");
      out.write("						table += \"<td>\" + v[\"1차 접종 누계\"].toLocaleString() + \"</td>\";\r\n");
      out.write("						table += \"<td>\" + v[\"1차 접종 퍼센트\"].toLocaleString('ko-KR', {maximumFractionDigits: 2}) + \"% </td>\";\r\n");
      out.write("						table += \"<td>\" + v[\"2차 접종 누계\"].toLocaleString() + \"</td>\";\r\n");
      out.write("						table += \"<td>\" + v[\"2차 접종 퍼센트\"].toLocaleString('ko-KR', {maximumFractionDigits: 2}) + \"% </td>\";\r\n");
      out.write("						table += \"</tr>\";\r\n");
      out.write("					});\r\n");
      out.write("					\r\n");
      out.write("					table += \"</tbody></table>\";\r\n");
      out.write("					$(\"#out\").append(table);\r\n");
      out.write("					\r\n");
      out.write("				},\r\n");
      out.write("				error :function(){\r\n");
      out.write("					alert(\"읽기실패\");\r\n");
      out.write("				},\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write(" });\r\n");
      out.write(" </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div style=\"width: 800px; margin: auto\">\r\n");
      out.write("		<button id=\"btn1\">xml 정보가져오기</button>		\r\n");
      out.write("		<button id=\"btn2\">json 정보가져오기</button>		\r\n");
      out.write("	</div>\r\n");
      out.write("	<br><br><br>\r\n");
      out.write("	<div id=\"out\"></div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
